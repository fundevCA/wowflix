{"version":3,"sources":["Assets/no_poster.png","Components/Loader.js","Components/API.js","Components/Message.js","Components/Section.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/HomeContainer.js","Routes/Home/index.js"],"names":["Container","styled","div","Loader","role","aria-label","base","axios","create","baseURL","params","api_key","language","movieAPI","nowPlaying","get","popular","topRated","upcoming","detail","id","append_to_response","search","keyword","query","encodeURIComponent","tvAPI","airingToday","collectionAPI","Text","span","props","color","Message","text","Title","Grid","Section","title","children","Image","img","Date","Poster","poster","date","isMovie","to","src","noPoster","length","substring","HomePresenter","isLoading","error","Helmet","map","movie","poster_path","release_date","HomeContainer","state","a","data","results","this","setState","PureComponent"],"mappings":"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","file":"static/js/6.a7c1be2e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/no_poster.56e1ce3e.png\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  font-size: 3rem;\n  justify-content: center;\n  align-items: center;\n  height: 60vh;\n`;\n\nconst Loader = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ‚è∞\n    </span>\n  </Container>\n);\n\nexport default Loader;\n","import axios from \"axios\";\n\nconst base = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"b628b0f65cc8570a11e0e393168cfb49\",\n    language: \"en-US\"\n  }\n});\n\nexport const movieAPI = {\n  nowPlaying: () => base.get(\"movie/now_playing\"),\n  popular: () => base.get(\"movie/popular\"),\n  topRated: () => base.get(\"movie/top_rated\"),\n  upcoming: () => base.get(\"movie/upcoming\"),\n  detail: id =>\n    base.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: keyword =>\n    base.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(keyword)\n      }\n    })\n};\n\nexport const tvAPI = {\n  airingToday: () => base.get(\"tv/airing_today\"),\n  popular: () => base.get(\"tv/popular\"),\n  topRated: () => base.get(\"tv/top_rated\"),\n  detail: id =>\n    base.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: keyword =>\n    base.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(keyword)\n      }\n    })\n};\n\nexport const collectionAPI = {\n  detail: id => base.get(`collection/${id}`)\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst Text = styled.span`\n  width: 100vw;\n  color: ${props => props.color};\n  text-align: center;\n  font-size: 1rem;\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: inherit;\n  padding: 1rem 2rem;\n  :not(:last-child) {\n    margin-bottom: 3rem;\n  }\n`;\nconst Title = styled.div`\n  font-size: 1.6rem;\n  font-weight: 500;\n  margin-bottom: 1.4rem;\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 10rem);\n  grid-gap: 0.5rem;\n  padding-left: 1.5rem;\n`;\n\nconst Section = ({ title, children }) => {\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <Grid>{children}</Grid>\n    </Container>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport noPoster from \"../Assets/no_poster.png\";\n\nconst Container = styled.div`\n  justify-items: end;\n  width: 10rem;\n`;\nconst Image = styled.img`\n  width: inherit;\n  height: 16rem;\n  object-fit: contain;\n  border-radius: 0.3rem;\n  :hover {\n    opacity: 0.3;\n  }\n`;\nconst Title = styled.span`\n  display: block;\n  font-size: 1rem;\n  font-weight: 500;\n  margin-bottom: 0.3rem;\n`;\nconst Date = styled.div`\n  color: grey;\n  font-size: 0.8rem;\n`;\nconst BASE_URL = \"https://image.tmdb.org/t/p/w300/\";\n\nconst Poster = ({ id, title, poster, date, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `tv/${id}`}>\n    <Container>\n      <Image src={poster ? BASE_URL + poster : noPoster}></Image>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Date> {date ? date.substring(0, 4) : null}</Date>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string,\n  date: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div``;\n\nconst HomePresenter = ({\n  nowPlaying,\n  popular,\n  topRated,\n  upcoming,\n  isLoading,\n  error\n}) =>\n  isLoading ? (\n    <Helmet>\n      <title>MOVIE | WOWFLIX</title>\n      <Loader />\n    </Helmet>\n  ) : (\n    <Container>\n      {nowPlaying && nowPlaying.length > 0 && (\n        <Section\n          title=\"Now Playing\"\n          children={nowPlaying.map(movie => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              title={movie.title}\n              poster={movie.poster_path}\n              date={movie.release_date}\n              isMovie={true}\n            ></Poster>\n          ))}\n        />\n      )}\n      {popular && popular.length > 0 && (\n        <Section\n          title=\"Popular\"\n          children={popular.map(movie => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              title={movie.title}\n              poster={movie.poster_path}\n              date={movie.release_date}\n              isMovie={true}\n            ></Poster>\n          ))}\n        />\n      )}\n      {topRated && topRated.length > 0 && (\n        <Section\n          title=\"Top Rated\"\n          children={topRated.map(movie => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              title={movie.title}\n              poster={movie.poster_path}\n              date={movie.release_date}\n              isMovie={true}\n            ></Poster>\n          ))}\n        />\n      )}\n      {upcoming && upcoming.length > 0 && (\n        <Section\n          title=\"Upcoming\"\n          children={upcoming.map(movie => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              title={movie.title}\n              poster={movie.poster_path}\n              date={movie.release_date}\n              isMovie={true}\n            ></Poster>\n          ))}\n        />\n      )}\n      {error && error.length > 0 && <Message text={error} color=\"#bbbbbb\" />}\n    </Container>\n  );\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  topRated: PropTypes.array,\n  upcoming: PropTypes.array,\n  isLoading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;\n","import React, { PureComponent } from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { movieAPI } from \"../../Components/API\";\n\nclass HomeContainer extends PureComponent {\n  state = {\n    nowPlaying: null,\n    popular: null,\n    topRated: null,\n    upcoming: null,\n    isLoading: true,\n    error: \"\"\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await movieAPI.nowPlaying();\n      const {\n        data: { results: popular }\n      } = await movieAPI.popular();\n      const {\n        data: { results: topRated }\n      } = await movieAPI.topRated();\n      const {\n        data: { results: upcoming }\n      } = await movieAPI.upcoming();\n\n      this.setState({ nowPlaying, popular, topRated, upcoming });\n    } catch {\n      this.setState({ error: \"Couldn't get the movie data\" });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  render() {\n    const {\n      nowPlaying,\n      popular,\n      topRated,\n      upcoming,\n      isLoading,\n      error\n    } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        popular={popular}\n        topRated={topRated}\n        upcoming={upcoming}\n        isLoading={isLoading}\n        error={error}\n      />\n    );\n  }\n}\n\nexport default HomeContainer;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n"],"sourceRoot":""}