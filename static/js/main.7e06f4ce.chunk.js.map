{"version":3,"sources":["Components/Section.js","Components/Loader.js","Components/Message.js","Assets/no_poster.png","Components/Poster.js","Routes/Home/HomePresenter.js","Components/API.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Assets/no_background.jpeg","Assets/IMDB.png","Components/CollectionCard.js","Components/BackPoster.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Collection/CollectionPresenter.js","Routes/Collection/index.js","Routes/Collection/CollectionContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","Grid","Section","title","children","Loader","role","aria-label","Text","span","props","color","Message","text","Image","img","Date","Poster","id","poster","date","isMovie","to","src","noPoster","length","substring","HomePresenter","nowPlaying","popular","topRated","upcoming","isLoading","error","Helmet","map","movie","poster_path","release_date","base","axios","create","baseURL","params","api_key","language","movieAPI","get","append_to_response","keyword","query","encodeURIComponent","tvAPI","collectionAPI","HomeContainer","state","a","data","results","this","setState","Component","Card","Collection","Back","back","BackPoster","Background","Content","Description","TextContainer","h3","ItemContainer","Item","Divider","IMDB","IMDBIMG","Tagline","Overview","p","VideoContainer","Video","iframe","CollectionCard","DetailPresenter","detail","original_title","name","backdrop_path","noBack","first_air_date","genres","genre","index","runtime","episode_run_time","vote_average","imdb_id","href","target","tagline","belongs_to_collection","overview","videos","slice","video","key","allow","DetailContainer","match","path","includes","isNaN","parseInt","history","push","console","log","Form","form","Input","input","SearchPresenter","searchMovie","searchTV","term","handleSubmit","handleChange","onSubmit","placeholder","onChange","value","autoFocus","tv","original_name","SearchContainer","e","preventDefault","searchByTerm","TVPresenter","airingToday","TVContainer","Ul","ul","List","li","current","withRouter","pathname","location","CollectionPresenter","CollectionContainer","Router","exact","component","Home","Search","TV","Detail","GlobalStyles","createGlobalStyle","reset","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e06f4ce.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: inherit;\n  padding: 1rem 2rem;\n  :not(:last-child) {\n    margin-bottom: 3rem;\n  }\n`;\nconst Title = styled.div`\n  font-size: 1.6rem;\n  font-weight: 500;\n  margin-bottom: 1.4rem;\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 10rem);\n  grid-gap: 0.5rem;\n  padding-left: 1.5rem;\n`;\n\nconst Section = ({ title, children }) => {\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <Grid>{children}</Grid>\n    </Container>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  font-size: 3rem;\n  justify-content: center;\n  align-items: center;\n  height: 60vh;\n`;\n\nconst Loader = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n\nexport default Loader;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst Text = styled.span`\n  width: 100vw;\n  color: ${props => props.color};\n  text-align: center;\n  font-size: 1rem;\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","export default __webpack_public_path__ + \"static/media/no_poster.56e1ce3e.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport noPoster from \"../Assets/no_poster.png\";\n\nconst Container = styled.div`\n  justify-items: end;\n  width: 10rem;\n`;\nconst Image = styled.img`\n  width: inherit;\n  height: 16rem;\n  object-fit: contain;\n  border-radius: 0.3rem;\n  :hover {\n    opacity: 0.3;\n  }\n`;\nconst Title = styled.span`\n  display: block;\n  font-size: 1rem;\n  font-weight: 500;\n  margin-bottom: 0.3rem;\n`;\nconst Date = styled.div`\n  color: grey;\n  font-size: 0.8rem;\n`;\nconst BASE_URL = \"https://image.tmdb.org/t/p/w300/\";\n\nconst Poster = ({ id, title, poster, date, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `tv/${id}`}>\n    <Container>\n      <Image src={poster ? BASE_URL + poster : noPoster}></Image>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Date> {date ? date.substring(0, 4) : null}</Date>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string,\n  date: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div``;\nconst Title = styled.span``;\n\nconst HomePresenter = ({\n  nowPlaying,\n  popular,\n  topRated,\n  upcoming,\n  isLoading,\n  error\n}) =>\n  isLoading ? (\n    <Helmet>\n      <title>MOVIE | WOWFLIX</title>\n      <Loader />\n    </Helmet>\n  ) : (\n    <Container>\n      {nowPlaying && nowPlaying.length > 0 && (\n        <Section\n          title=\"Now Playing\"\n          children={nowPlaying.map(movie => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              title={movie.title}\n              poster={movie.poster_path}\n              date={movie.release_date}\n              isMovie={true}\n            ></Poster>\n          ))}\n        />\n      )}\n      {popular && popular.length > 0 && (\n        <Section\n          title=\"Popular\"\n          children={popular.map(movie => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              title={movie.title}\n              poster={movie.poster_path}\n              date={movie.release_date}\n              isMovie={true}\n            ></Poster>\n          ))}\n        />\n      )}\n      {topRated && topRated.length > 0 && (\n        <Section\n          title=\"Top Rated\"\n          children={topRated.map(movie => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              title={movie.title}\n              poster={movie.poster_path}\n              date={movie.release_date}\n              isMovie={true}\n            ></Poster>\n          ))}\n        />\n      )}\n      {upcoming && upcoming.length > 0 && (\n        <Section\n          title=\"Upcoming\"\n          children={upcoming.map(movie => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              title={movie.title}\n              poster={movie.poster_path}\n              date={movie.release_date}\n              isMovie={true}\n            ></Poster>\n          ))}\n        />\n      )}\n      {error && error.length > 0 && <Message text={error} color=\"#bbbbbb\" />}\n    </Container>\n  );\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  topRated: PropTypes.array,\n  upcoming: PropTypes.array,\n  isLoading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst base = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"b628b0f65cc8570a11e0e393168cfb49\",\n    language: \"en-US\"\n  }\n});\n\nexport const movieAPI = {\n  nowPlaying: () => base.get(\"movie/now_playing\"),\n  popular: () => base.get(\"movie/popular\"),\n  topRated: () => base.get(\"movie/top_rated\"),\n  upcoming: () => base.get(\"movie/upcoming\"),\n  detail: id =>\n    base.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: keyword =>\n    base.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(keyword)\n      }\n    })\n};\n\nexport const tvAPI = {\n  airingToday: () => base.get(\"tv/airing_today\"),\n  popular: () => base.get(\"tv/popular\"),\n  topRated: () => base.get(\"tv/top_rated\"),\n  detail: id =>\n    base.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: keyword =>\n    base.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(keyword)\n      }\n    })\n};\n\nexport const collectionAPI = {\n  detail: id => base.get(`collection/${id}`)\n};\n","import React from \"react\";\nimport HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React, { Component } from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { movieAPI } from \"../../Components/API\";\n\nclass HomeContainer extends Component {\n  state = {\n    nowPlaying: null,\n    popular: null,\n    topRated: null,\n    upcoming: null,\n    isLoading: true,\n    error: \"\"\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await movieAPI.nowPlaying();\n      const {\n        data: { results: popular }\n      } = await movieAPI.popular();\n      const {\n        data: { results: topRated }\n      } = await movieAPI.topRated();\n      const {\n        data: { results: upcoming }\n      } = await movieAPI.upcoming();\n\n      this.setState({ nowPlaying, popular, topRated, upcoming });\n    } catch {\n      this.setState({ error: \"Couldn't get the movie data\" });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  render() {\n    const {\n      nowPlaying,\n      popular,\n      topRated,\n      upcoming,\n      isLoading,\n      error\n    } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        popular={popular}\n        topRated={topRated}\n        upcoming={upcoming}\n        isLoading={isLoading}\n        error={error}\n      />\n    );\n  }\n}\n\nexport default HomeContainer;\n","export default __webpack_public_path__ + \"static/media/no_background.2e124746.jpeg\";","export default __webpack_public_path__ + \"static/media/IMDB.1fd6c3b4.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Card = styled.div`\n  height: 5rem;\n  width: 5rem;\n  background-image: url(${props => props.poster});\n  background-position: center center;\n  background-size: contain;\n  background-repeat: no-repeat;\n  border-radius: 2rem;\n`;\n\nconst Collection = ({ id, poster }) => <Card poster={poster} />;\n\nCollection.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster: PropTypes.string\n};\n\nexport default Collection;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Back = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.back});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.4;\n  z-index: 0;\n`;\n\nconst BackPoster = ({ back }) => <Back back={back} />;\n\nBackPoster.propTypes = {\n  back: PropTypes.string.isRequired\n};\n\nexport default BackPoster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport noPoster from \"../../Assets/no_poster.png\";\nimport noBack from \"../../Assets/no_background.jpeg\";\nimport Helmet from \"react-helmet\";\nimport IMDBIMG from \"../../Assets/IMDB.png\";\nimport { Link } from \"react-router-dom\";\nimport CollectionCard from \"../../Components/CollectionCard\";\nimport BackPoster from \"../../Components/BackPoster\";\n\nconst BASE_URL = \"https://image.tmdb.org/t/p/original/\";\nconst Container = styled.div`\n  position: relative;\n  width: 100vw;\n  height: calc(100vh - 4.5rem);\n  background-color: grey;\n  padding: 3rem;\n`;\nconst Background = styled(BackPoster)``;\n// const BackPoster = styled.div`\n//   position: absolute;\n//   top: 0;\n//   left: 0;\n//   width: 100%;\n//   height: 100%;\n//   background-image: url(${props => props.back});\n//   background-position: center center;\n//   background-size: cover;\n//   filter: blur(3px);\n//   opacity: 0.4;\n//   z-index: 0;\n// `;\nconst Content = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  /* justify-content: center; */\n  box-sizing: border-box;\n`;\nconst Poster = styled.div`\n  width: 30%;\n  min-width: 20rem;\n  height: 100%;\n  background-image: url(${props => props.poster});\n  background-position: center center;\n  background-size: contain;\n  background-repeat: no-repeat;\n  z-index: 1;\n  border-radius: 0.4rem;\n  flex-wrap: wrap;\n`;\nconst Description = styled.div`\n  width: 70%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  overflow: scroll;\n  padding-left: 4rem;\n  font-size: 1.5rem;\n  z-index: 1;\n  justify-content: space-between;\n`;\nconst TextContainer = styled.div`\n  /* height: 100%; */\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1rem;\n  > span {\n    margin-bottom: 1.5rem;\n  }\n`;\nconst Title = styled.h3`\n  font-size: 3rem;\n`;\nconst ItemContainer = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 1rem;\n  margin: 1rem 0;\n  flex-wrap: wrap;\n`;\nconst Item = styled.span``;\nconst Divider = styled.span``;\n\nconst Genre = styled.span`\n  font-size: 1rem;\n`;\nconst Runtime = styled.span``;\nconst Vote = styled.span``;\nconst IMDB = styled.div`\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n  width: 2rem;\n  height: 1rem;\n  background-image: url(${IMDBIMG});\n  background-position: center center;\n  background-size: contain;\n  background-repeat: no-repeat;\n  &:hover {\n    cursor: pointer;\n  }\n`;\nconst Tagline = styled.span`\n  font-style: italic;\n  font-size: 1.2rem;\n  margin: 1rem 0;\n  /* color: grey; */\n`;\nconst Overview = styled.p`\n  width: 70%;\n  font-size: 1rem;\n  line-height: 1.2;\n`;\nconst VideoContainer = styled.div`\n  width: 80%;\n  height: 60%;\n  display: flex;\n  overflow-y: scroll;\n`;\nconst Video = styled.iframe`\n  margin-right: 1rem;\n  height: 100%;\n  width: 100%;\n`;\nconst Card = styled(CollectionCard)`\n  height: 100rem;\n  width: 30rem;\n`;\n\nconst DetailPresenter = ({ detail, isLoading, error, isMovie }) =>\n  isLoading ? (\n    <Loader />\n  ) : (\n    <>\n      <Helmet>\n        <title>\n          {detail.original_title ? detail.original_title : detail.name} |\n          WOWFLIX\n        </title>\n      </Helmet>\n      <Container>\n        <Background\n          back={\n            detail.backdrop_path\n              ? `https://image.tmdb.org/t/p/original/${detail.backdrop_path}`\n              : noBack\n          }\n        />\n        <Content>\n          <Poster\n            poster={\n              detail.poster_path\n                ? `https://image.tmdb.org/t/p/original/${detail.poster_path}`\n                : noPoster\n            }\n          />\n          <Description>\n            <TextContainer>\n              <Title>{isMovie ? detail.original_title : detail.name}</Title>\n              <ItemContainer>\n                <Item>\n                  {\" \"}\n                  {isMovie\n                    ? detail.release_date.substring(0, 4)\n                    : detail.first_air_date.substring(0, 4)}\n                </Item>\n                <Divider>&nbsp;∙&nbsp;</Divider>\n                <Item>\n                  {detail.genres.map((genre, index) =>\n                    index > 0 ? ` ∙ ` + genre.name : genre.name\n                  )}\n                  &nbsp;\n                </Item>\n                <Divider>&nbsp;∙&nbsp;</Divider>\n                <Item>\n                  {detail.runtime\n                    ? detail.runtime + \"m\"\n                    : detail.episode_run_time[0] + \"m\"}\n                </Item>\n                <Divider>&nbsp;∙&nbsp;</Divider>\n                <Item>\n                  <span aria-label=\"star\">⭐️</span> {detail.vote_average} / 10\n                </Item>\n                <Divider>&nbsp;∙&nbsp;</Divider>\n                {detail.imdb_id ? (\n                  <a\n                    href={`https://www.imdb.com/title/${detail.imdb_id}`}\n                    target=\"_blank\"\n                  >\n                    <IMDB />\n                  </a>\n                ) : (\n                  \"\"\n                )}\n              </ItemContainer>\n              <ItemContainer>\n                <Tagline>{detail.tagline} </Tagline>{\" \"}\n                {detail.belongs_to_collection ? (\n                  <Card\n                    id={detail.belongs_to_collection.id}\n                    poster={`https://image.tmdb.org/t/p/original/${detail.belongs_to_collection.poster_path}`}\n                  />\n                ) : (\n                  \"\"\n                )}\n              </ItemContainer>\n              <Overview>{detail.overview}</Overview>\n            </TextContainer>\n\n            {detail.videos ? (\n              <VideoContainer>\n                {detail.videos.results.slice(0, 1).map(video => (\n                  <Video\n                    id={video.id}\n                    src={`https://www.youtube.com/embed/${video.key}`}\n                    allow={\"fullscreen\"}\n                  />\n                ))}\n              </VideoContainer>\n            ) : (\n              \"\"\n            )}\n          </Description>\n        </Content>\n\n        {error && error.length > 0 && <Message text={error} color=\"#bbbbbb\" />}\n      </Container>\n    </>\n  );\n\nDetailPresenter.propTypes = {\n  detail: PropTypes.object,\n  isLoading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  isMovie: PropTypes.bool.isRequired\n};\n\nexport default DetailPresenter;\n","import React from \"react\";\nimport DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React, { Component } from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { movieAPI, tvAPI } from \"../../Components/API\";\n\nclass DetailContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      detail: null,\n      isLoading: true,\n      error: \"\",\n      isMovie: props.match.path.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    let {\n      match: {\n        params: { id }\n      }\n    } = this.props;\n\n    if (isNaN(parseInt(id))) {\n      this.props.history.push(\"/\");\n    } else {\n      const { isMovie } = this.state;\n      id = parseInt(id);\n      let detail = null;\n      try {\n        if (isMovie) {\n          ({ data: detail } = await movieAPI.detail(id));\n        } else {\n          ({ data: detail } = await tvAPI.detail(id));\n        }\n        this.setState({ detail });\n      } catch {\n        this.setState({ error: \"Could not find the Detail\" });\n      } finally {\n        this.setState({ isLoading: false });\n      }\n    }\n  }\n\n  render() {\n    const { detail, isLoading, error, isMovie } = this.state;\n    console.log(detail);\n    return (\n      <DetailPresenter\n        detail={detail}\n        isLoading={isLoading}\n        error={error}\n        isMovie={isMovie}\n      />\n    );\n  }\n}\n\nexport default DetailContainer;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 2rem 3rem;\n`;\nconst Form = styled.form``;\nconst Input = styled.input`\n  all: unset;\n  color: white;\n  width: 100%;\n  padding-left: 2rem;\n  font-size: 3rem;\n  margin-bottom: 2rem;\n  :focus {\n    outline: none;\n  }\n`;\nconst Title = styled.span``;\n\nconst SearchPresenter = ({\n  searchMovie,\n  searchTV,\n  term,\n  isLoading,\n  error,\n  handleSubmit,\n  handleChange\n}) => (\n  <Container>\n    <Helmet>\n      <title>SEARCH | WOWFLIX</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movie / TV Show\"\n        onChange={handleChange}\n        value={term}\n        autoFocus\n      />\n    </Form>\n    {isLoading ? (\n      <Loader />\n    ) : (\n      <>\n        {searchMovie && searchMovie.length > 0 && (\n          <Section title={`MOVIES`}>\n            {searchMovie.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                poster={movie.poster_path}\n                date={movie.release_date}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {searchTV && searchTV.length > 0 && (\n          <Section title={`TV`}>\n            {searchTV.map(tv => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                title={tv.original_name}\n                poster={tv.poster_path}\n                date={tv.first_air_date}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {error && error.length > 0 && <Message text={error} color=\"#bbbbbb\" />}\n        {searchMovie &&\n          searchTV &&\n          searchMovie.length === 0 &&\n          searchTV.length === 0 && (\n            <Message text={`Nothing found for ${term}`} color=\"#bbbbbb\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  searchMovie: PropTypes.array,\n  searchTV: PropTypes.array,\n  isLoading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import React from \"react\";\nimport SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React, { Component } from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { movieAPI, tvAPI } from \"../../Components/API\";\n\nclass SearchContainer extends Component {\n  state = {\n    searchMovie: null,\n    searchTV: null,\n    term: \"\",\n    isLoading: false,\n    error: \"\"\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { term } = this.state;\n    if (term !== \"\") {\n      this.searchByTerm();\n    }\n  };\n  handleChange = e => {\n    const {\n      target: { value: term }\n    } = e;\n\n    this.setState({ term });\n  };\n  searchByTerm = async () => {\n    const { term } = this.state;\n    this.setState({\n      isLoading: true\n    });\n    try {\n      const {\n        data: { results: searchMovie }\n      } = await movieAPI.search(term);\n      const {\n        data: { results: searchTV }\n      } = await tvAPI.search(term);\n\n      this.setState({ searchMovie, searchTV });\n    } catch {\n      this.setState({ error: \"Problem when search by Keyword\" });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  };\n\n  render() {\n    const { searchMovie, searchTV, term, isLoading, error } = this.state;\n\n    return (\n      <SearchPresenter\n        searchMovie={searchMovie}\n        searchTV={searchTV}\n        term={term}\n        isLoading={isLoading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        handleChange={this.handleChange}\n      />\n    );\n  }\n}\nexport default SearchContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div``;\nconst Title = styled.span``;\n\nconst TVPresenter = ({ airingToday, popular, topRated, isLoading, error }) =>\n  isLoading ? (\n    <Helmet>\n      <title>TV | WOWFLIX</title>\n      <Loader />\n    </Helmet>\n  ) : (\n    <Container>\n      {popular && popular.length && (\n        <Section title=\"Popular\">\n          {popular.map(tv => (\n            <Poster\n              key={tv.id}\n              id={tv.id}\n              title={tv.original_name}\n              poster={tv.poster_path}\n              date={tv.first_air_date}\n            ></Poster>\n          ))}\n        </Section>\n      )}\n      {airingToday && airingToday.length && (\n        <Section title=\"Airing Today\">\n          {airingToday.map(tv => (\n            <Poster\n              key={tv.id}\n              id={tv.id}\n              title={tv.original_name}\n              poster={tv.poster_path}\n              date={tv.first_air_date}\n            ></Poster>\n          ))}\n        </Section>\n      )}\n      {topRated && topRated.length && (\n        <Section title=\"Top Rated\">\n          {topRated.map(tv => (\n            <Poster\n              key={tv.id}\n              id={tv.id}\n              title={tv.original_name}\n              poster={tv.poster_path}\n              date={tv.first_air_date}\n            ></Poster>\n          ))}\n        </Section>\n      )}\n      {error && error.length > 0 && <Message text={error} color=\"#bbbbbb\" />}\n    </Container>\n  );\n\nTVPresenter.propTypes = {\n  airingToday: PropTypes.array,\n  popular: PropTypes.array,\n  topRated: PropTypes.array,\n  isLoading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React, { Component } from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvAPI } from \"../../Components/API\";\n\nclass TVContainer extends Component {\n  state = {\n    airingToday: null,\n    popular: null,\n    topRated: null,\n    isLoading: true,\n    error: \"\"\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: airingToday }\n      } = await tvAPI.airingToday();\n      const {\n        data: { results: popular }\n      } = await tvAPI.popular();\n      const {\n        data: { results: topRated }\n      } = await tvAPI.topRated();\n\n      this.setState({ airingToday, popular, topRated });\n    } catch {\n      this.setState({ error: \"Couldn't get the tv data\" });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  render() {\n    const { airingToday, popular, topRated, isLoading, error } = this.state;\n    return (\n      <TVPresenter\n        airingToday={airingToday}\n        popular={popular}\n        topRated={topRated}\n        isLoading={isLoading}\n        error={error}\n      />\n    );\n  }\n}\n\nexport default TVContainer;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Ul = styled.ul`\n  display: flex;\n`;\nconst List = styled.li`\n  margin: 1.2em 1.4em;\n  font-family: \"Roboto\", sans-serif;\n  padding: 0.7em;\n  width: 6vw;\n  text-align: center;\n\n  border-bottom: 0.3em solid ${props => (props.current ? \"red\" : \"transparent\")};\n  &:hover {\n    background-color: #464f41;\n    cursor: pointer;\n  }\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst Header = ({ location: { pathname } }) => (\n  <>\n    <Ul>\n      <Link to=\"/\">\n        <List current={pathname === \"/\"}>Home</List>\n      </Link>\n      <Link to=\"/tv\">\n        <List current={pathname === \"/tv\"}>TV</List>\n      </Link>\n      <Link to=\"/search\">\n        <List current={pathname === \"/search\"}>Search</List>\n      </Link>\n    </Ul>\n  </>\n);\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport BackPoster from \"../../Components/BackPoster\";\nimport Loader from \"../../Components/Loader\";\n\nconst Container = styled.div`\n  position: relative;\n  width: 100vw;\n  height: calc(100vh - 4.5rem);\n  background-color: grey;\n  padding: 3rem;\n`;\nconst Back = styled(BackPoster)`\n  height: 50%;\n  width: 100%;\n`;\n\nconst CollectionPresenter = ({ detail, isLoading, error }) =>\n  isLoading ? (\n    <Loader />\n  ) : (\n    <Container>\n      <BackPoster\n        back={`https://image.tmdb.org/t/p/original/${detail.backdrop_path}`}\n      />\n    </Container>\n  );\n\nCollectionPresenter.propTypes = {\n  detail: PropTypes.object,\n  isLoading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default CollectionPresenter;\n","import React from \"react\";\nimport CollectionContainer from \"./CollectionContainer\";\n\nexport default CollectionContainer;\n","import React, { Component } from \"react\";\nimport CollectionPresenter from \"./CollectionPresenter\";\nimport { collectionAPI } from \"../../Components/API\";\n\nclass CollectionContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      detail: null,\n      isLoading: true,\n      error: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    let {\n      match: {\n        params: { id }\n      }\n    } = this.props;\n\n    if (isNaN(parseInt(id))) {\n      this.props.history.push(\"/\");\n    } else {\n      id = parseInt(id);\n      let detail = null;\n      try {\n        ({ data: detail } = await collectionAPI.detail(id));\n        this.setState({ detail });\n        console.log(detail);\n      } catch {\n        this.setState({ error: \"Could not find the Collection\" });\n      } finally {\n        this.setState({ isLoading: false });\n      }\n    }\n  }\n\n  render() {\n    const { detail, isLoading, error } = this.state;\n    console.log(detail);\n    return (\n      <CollectionPresenter\n        detail={detail}\n        isLoading={isLoading}\n        error={error}\n      />\n    );\n  }\n}\n\nexport default CollectionContainer;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"../Routes/Home\";\nimport Detail from \"../Routes/Detail\";\nimport Search from \"../Routes/Search\";\nimport TV from \"../Routes/TV\";\nimport Header from \"./Header\";\nimport Collection from \"../Routes/Collection\";\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <>\n        <Header />\n        <Switch>\n          <Route\n            path=\"https://fundevca.github.io/wowflix\"\n            exact\n            component={Home}\n          />\n          <Route\n            path=\"https://fundevca.github.io/wowflix/search\"\n            component={Search}\n          />\n          <Route\n            path=\"https://fundevca.github.io/wowflix/tv\"\n            exact\n            component={TV}\n          />\n          <Route\n            path=\"https://fundevca.github.io/wowflix/tv/:id\"\n            component={Detail}\n          />\n          <Route\n            path=\"https://fundevca.github.io/wowflix/movie/:id\"\n            component={Detail}\n          />\n          <Route\n            path=\"https://fundevca.github.io/wowflix/collection/:id\"\n            component={Collection}\n          />\n        </Switch>\n      </>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import reset from \"react-style-reset\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\n  ${reset};\n    a{\n        text-decoration: none;\n        color: inherit;\n    }\n    body{\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 14px;\n        background-color: black;\n    }\n    *{\n        box-sizing: border-box;\n        color: white\n    }\n`;\n\nexport default GlobalStyles;\n","import React from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyles />\n      <Router />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport api from \"./Components/API\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}