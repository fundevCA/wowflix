{"version":3,"sources":["Assets/no_poster.png","Components/Loader.js","Components/API.js","Components/Message.js","Components/Section.js","Components/Poster.js","Routes/Search/SearchPresenter.js","Routes/Search/SearchContainer.js","Routes/Search/index.js"],"names":["Container","styled","div","Loader","role","aria-label","base","axios","create","baseURL","params","api_key","language","movieAPI","nowPlaying","get","popular","topRated","upcoming","detail","id","append_to_response","search","keyword","query","encodeURIComponent","tvAPI","airingToday","collectionAPI","Text","span","props","color","Message","text","Title","Grid","Section","title","children","Image","img","Date","Poster","poster","date","isMovie","to","src","noPoster","length","substring","Form","form","Input","input","SearchPresenter","searchMovie","searchTV","term","isLoading","error","handleSubmit","handleChange","Helmet","onSubmit","placeholder","onChange","value","autoFocus","map","movie","original_title","poster_path","release_date","tv","original_name","first_air_date","SearchContainer","state","e","preventDefault","searchByTerm","target","setState","a","data","results","this","PureComponent"],"mappings":"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","file":"static/js/7.2f264ff1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/no_poster.56e1ce3e.png\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  font-size: 3rem;\n  justify-content: center;\n  align-items: center;\n  height: 60vh;\n`;\n\nconst Loader = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ‚è∞\n    </span>\n  </Container>\n);\n\nexport default Loader;\n","import axios from \"axios\";\n\nconst base = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"b628b0f65cc8570a11e0e393168cfb49\",\n    language: \"en-US\"\n  }\n});\n\nexport const movieAPI = {\n  nowPlaying: () => base.get(\"movie/now_playing\"),\n  popular: () => base.get(\"movie/popular\"),\n  topRated: () => base.get(\"movie/top_rated\"),\n  upcoming: () => base.get(\"movie/upcoming\"),\n  detail: id =>\n    base.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: keyword =>\n    base.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(keyword)\n      }\n    })\n};\n\nexport const tvAPI = {\n  airingToday: () => base.get(\"tv/airing_today\"),\n  popular: () => base.get(\"tv/popular\"),\n  topRated: () => base.get(\"tv/top_rated\"),\n  detail: id =>\n    base.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: keyword =>\n    base.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(keyword)\n      }\n    })\n};\n\nexport const collectionAPI = {\n  detail: id => base.get(`collection/${id}`)\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst Text = styled.span`\n  width: 100vw;\n  color: ${props => props.color};\n  text-align: center;\n  font-size: 1rem;\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: inherit;\n  padding: 1rem 2rem;\n  :not(:last-child) {\n    margin-bottom: 3rem;\n  }\n`;\nconst Title = styled.div`\n  font-size: 1.6rem;\n  font-weight: 500;\n  margin-bottom: 1.4rem;\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 10rem);\n  grid-gap: 0.5rem;\n  padding-left: 1.5rem;\n`;\n\nconst Section = ({ title, children }) => {\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <Grid>{children}</Grid>\n    </Container>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport noPoster from \"../Assets/no_poster.png\";\n\nconst Container = styled.div`\n  justify-items: end;\n  width: 10rem;\n`;\nconst Image = styled.img`\n  width: inherit;\n  height: 16rem;\n  object-fit: contain;\n  border-radius: 0.3rem;\n  :hover {\n    opacity: 0.3;\n  }\n`;\nconst Title = styled.span`\n  display: block;\n  font-size: 1rem;\n  font-weight: 500;\n  margin-bottom: 0.3rem;\n`;\nconst Date = styled.div`\n  color: grey;\n  font-size: 0.8rem;\n`;\nconst BASE_URL = \"https://image.tmdb.org/t/p/w300/\";\n\nconst Poster = ({ id, title, poster, date, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `tv/${id}`}>\n    <Container>\n      <Image src={poster ? BASE_URL + poster : noPoster}></Image>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Date> {date ? date.substring(0, 4) : null}</Date>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string,\n  date: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 2rem 3rem;\n`;\nconst Form = styled.form``;\nconst Input = styled.input`\n  all: unset;\n  color: white;\n  width: 100%;\n  padding-left: 2rem;\n  font-size: 3rem;\n  margin-bottom: 2rem;\n  :focus {\n    outline: none;\n  }\n`;\n\nconst SearchPresenter = ({\n  searchMovie,\n  searchTV,\n  term,\n  isLoading,\n  error,\n  handleSubmit,\n  handleChange\n}) => (\n  <Container>\n    <Helmet>\n      <title>SEARCH | WOWFLIX</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movie / TV Show\"\n        onChange={handleChange}\n        value={term}\n        autoFocus\n      />\n    </Form>\n    {isLoading ? (\n      <Loader />\n    ) : (\n      <>\n        {searchMovie && searchMovie.length > 0 && (\n          <Section title={`MOVIES`}>\n            {searchMovie.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                poster={movie.poster_path}\n                date={movie.release_date}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {searchTV && searchTV.length > 0 && (\n          <Section title={`TV`}>\n            {searchTV.map(tv => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                title={tv.original_name}\n                poster={tv.poster_path}\n                date={tv.first_air_date}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {error && error.length > 0 && <Message text={error} color=\"#bbbbbb\" />}\n        {searchMovie &&\n          searchTV &&\n          searchMovie.length === 0 &&\n          searchTV.length === 0 && (\n            <Message text={`Nothing found for ${term}`} color=\"#bbbbbb\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  searchMovie: PropTypes.array,\n  searchTV: PropTypes.array,\n  isLoading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import React, { PureComponent } from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { movieAPI, tvAPI } from \"../../Components/API\";\n\nclass SearchContainer extends PureComponent {\n  state = {\n    searchMovie: null,\n    searchTV: null,\n    term: \"\",\n    isLoading: false,\n    error: \"\"\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { term } = this.state;\n    if (term !== \"\") {\n      this.searchByTerm();\n    }\n  };\n  handleChange = e => {\n    const {\n      target: { value: term }\n    } = e;\n\n    this.setState({ term });\n  };\n  searchByTerm = async () => {\n    const { term } = this.state;\n    this.setState({\n      isLoading: true\n    });\n    try {\n      const {\n        data: { results: searchMovie }\n      } = await movieAPI.search(term);\n      const {\n        data: { results: searchTV }\n      } = await tvAPI.search(term);\n\n      this.setState({ searchMovie, searchTV });\n    } catch {\n      this.setState({ error: \"Problem when search by Keyword\" });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  };\n\n  render() {\n    const { searchMovie, searchTV, term, isLoading, error } = this.state;\n\n    return (\n      <SearchPresenter\n        searchMovie={searchMovie}\n        searchTV={searchTV}\n        term={term}\n        isLoading={isLoading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        handleChange={this.handleChange}\n      />\n    );\n  }\n}\nexport default SearchContainer;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n"],"sourceRoot":""}