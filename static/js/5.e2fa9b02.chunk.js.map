{"version":3,"sources":["Assets/no_poster.png","Components/Loader.js","Components/API.js","Assets/no_background.jpeg","Components/CollectionCard.js","Components/BackPoster.js","Components/Collection.js","Routes/Collection/CollectionPresenter.js","Routes/Collection/CollectionContainer.js","Routes/Collection/index.js"],"names":["Container","styled","div","Loader","role","aria-label","base","axios","create","baseURL","params","api_key","language","movieAPI","nowPlaying","get","popular","topRated","upcoming","detail","id","append_to_response","search","keyword","query","encodeURIComponent","tvAPI","airingToday","collectionAPI","Card","props","poster","noPoster","Collection","to","Back","back","noBack","BackPoster","Image","img","Title","span","Date","Poster","title","date","src","substring","Content","h3","CollectionCard","Item","CollectionPoster","Collections","BASE_URL","CollectionPresenter","isLoading","error","Helmet","name","backdrop_path","poster_path","parts","map","collection","release_date","CollectionContainer","state","a","this","match","isNaN","parseInt","history","push","data","setState","console","log","PureComponent"],"mappings":"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","file":"static/js/5.e2fa9b02.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/no_poster.56e1ce3e.png\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  font-size: 3rem;\n  justify-content: center;\n  align-items: center;\n  height: 60vh;\n`;\n\nconst Loader = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n\nexport default Loader;\n","import axios from \"axios\";\n\nconst base = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"b628b0f65cc8570a11e0e393168cfb49\",\n    language: \"en-US\"\n  }\n});\n\nexport const movieAPI = {\n  nowPlaying: () => base.get(\"movie/now_playing\"),\n  popular: () => base.get(\"movie/popular\"),\n  topRated: () => base.get(\"movie/top_rated\"),\n  upcoming: () => base.get(\"movie/upcoming\"),\n  detail: id =>\n    base.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: keyword =>\n    base.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(keyword)\n      }\n    })\n};\n\nexport const tvAPI = {\n  airingToday: () => base.get(\"tv/airing_today\"),\n  popular: () => base.get(\"tv/popular\"),\n  topRated: () => base.get(\"tv/top_rated\"),\n  detail: id =>\n    base.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: keyword =>\n    base.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(keyword)\n      }\n    })\n};\n\nexport const collectionAPI = {\n  detail: id => base.get(`collection/${id}`)\n};\n","export default __webpack_public_path__ + \"static/media/no_background.2e124746.jpeg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport noPoster from \"../Assets/no_poster.png\";\n\nconst Card = styled.div`\n  height: 5rem;\n  width: 5rem;\n  background-image: url(${props => (props.poster ? props.poster : noPoster)});\n  background-position: center center;\n  background-size: contain;\n  background-repeat: no-repeat;\n  border-radius: 2rem;\n`;\n\nconst Collection = ({ id, poster }) => (\n  <Link to={`/collection/${id}`}>\n    <Card poster={poster} />\n  </Link>\n);\n\nCollection.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster: PropTypes.string\n};\n\nexport default Collection;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport noBack from \"../Assets/no_background.jpeg\";\n\nconst Back = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => (props.back ? props.back : noBack)});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.4;\n  z-index: -1;\n`;\n\nconst BackPoster = ({ back }) => <Back back={back} />;\n\nexport default BackPoster;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport noPoster from \"../Assets/no_poster.png\";\n\nconst Container = styled.div`\n  justify-items: end;\n  width: 100%;\n`;\nconst Image = styled.img`\n  width: 20rem;\n  height: 30rem;\n  object-fit: contain;\n  border-radius: 0.3rem;\n  :hover {\n    opacity: 0.3;\n  }\n`;\nconst Title = styled.span`\n  width: inherit;\n  display: block;\n  font-size: 1rem;\n  font-weight: 500;\n  margin-bottom: 0.3rem;\n`;\nconst Date = styled.div`\n  color: grey;\n  font-size: 0.8rem;\n`;\nconst BASE_URL = \"https://image.tmdb.org/t/p/w300/\";\n\nconst Poster = ({ id, title, poster, date }) => (\n  <Link to={`/movie/${id}`}>\n    <Container>\n      <Image src={poster ? BASE_URL + poster : noPoster}></Image>\n      <Title>{title}</Title>\n      <Date> {date ? date.substring(0, 4) : null}</Date>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string,\n  date: PropTypes.string\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport BackPoster from \"../../Components/BackPoster\";\nimport Loader from \"../../Components/Loader\";\nimport CollectionCard from \"../../Components/CollectionCard\";\nimport Collection from \"../../Components/Collection\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  position: relative;\n  width: 100vw;\n  height: calc(100vh - 4.5rem);\n\n  padding: 3rem;\n`;\nconst Content = styled.div`\n  height: 100%;\n  width: 100%;\n  /* display: flex; */\n  box-sizing: border-box;\n`;\nconst Title = styled.h3`\n  font-size: 3.5em;\n\n  color: #f9f6f7;\n  letter-spacing: 5px;\n  top: 50%;\n  text-shadow: -1px -1px 0px #151515, 3px 3px 0px #151515, 6px 6px 0px #151515;\n`;\nconst Card = styled(CollectionCard)``;\nconst Item = styled.div`\n  display: flex;\n  margin-top: -1rem;\n  margin-bottom: 2rem;\n  align-items: center;\n`;\nconst CollectionPoster = styled(Collection)``;\nconst Collections = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 21rem);\n  grid-gap: 3rem;\n  padding-left: 1.5rem;\n`;\nconst BASE_URL = `https://image.tmdb.org/t/p/original/`;\n\nconst CollectionPresenter = ({ detail, isLoading, error }) =>\n  isLoading ? (\n    <Loader />\n  ) : (\n    <>\n      <Helmet>\n        <title>{detail.name}</title>\n      </Helmet>\n      <Container>\n        <BackPoster back={`${BASE_URL}${detail.backdrop_path}`} />\n        <Content>\n          <Item>\n            <Title>{detail.name}</Title>\n            <Card id={detail.id} poster={BASE_URL + detail.poster_path} />\n          </Item>\n          <Collections>\n            {detail.parts\n              ? detail.parts.map(collection => (\n                  <CollectionPoster\n                    key={collection.id}\n                    id={collection.id}\n                    title={collection.title}\n                    poster={collection.poster_path}\n                    date={collection.release_date}\n                  />\n                ))\n              : \"\"}\n          </Collections>\n        </Content>\n      </Container>\n    </>\n  );\n\nCollectionPresenter.propTypes = {\n  detail: PropTypes.object,\n  isLoading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default CollectionPresenter;\n","import React, { PureComponent } from \"react\";\nimport CollectionPresenter from \"./CollectionPresenter\";\nimport { collectionAPI } from \"../../Components/API\";\n\nclass CollectionContainer extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      detail: null,\n      isLoading: true,\n      error: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    let {\n      match: {\n        params: { id }\n      }\n    } = this.props;\n\n    if (isNaN(parseInt(id))) {\n      this.props.history.push(\"/\");\n    } else {\n      id = parseInt(id);\n      let detail = null;\n      try {\n        ({ data: detail } = await collectionAPI.detail(id));\n        this.setState({ detail });\n        console.log(detail);\n      } catch {\n        this.setState({ error: \"Could not find the Collection\" });\n      } finally {\n        this.setState({ isLoading: false });\n      }\n    }\n  }\n\n  render() {\n    const { detail, isLoading, error } = this.state;\n    console.log(detail);\n    return (\n      <CollectionPresenter\n        detail={detail}\n        isLoading={isLoading}\n        error={error}\n      />\n    );\n  }\n}\n\nexport default CollectionContainer;\n","import CollectionContainer from \"./CollectionContainer\";\n\nexport default CollectionContainer;\n"],"sourceRoot":""}