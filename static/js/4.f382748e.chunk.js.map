{"version":3,"sources":["Assets/no_poster.png","Components/Loader.js","Components/API.js","Components/Message.js","Assets/no_background.jpeg","Components/CollectionCard.js","Components/BackPoster.js","Assets/IMDB.png","Routes/Detail/DetailPresenter.js","Routes/Detail/DetailContainer.js","Routes/Detail/index.js"],"names":["Container","styled","div","Loader","role","aria-label","base","axios","create","baseURL","params","api_key","language","movieAPI","nowPlaying","get","popular","topRated","upcoming","detail","id","append_to_response","search","keyword","query","encodeURIComponent","tvAPI","airingToday","collectionAPI","Text","span","props","color","Message","text","Card","poster","noPoster","Collection","to","Back","back","noBack","BackPoster","BASE_URL","Background","Content","Poster","Description","TextContainer","Title","h3","ItemContainer","Item","Divider","Genre","Runtime","Vote","IMDB","IMDBIMG","Tagline","Overview","p","VideoContainer","Video","iframe","CollectionCard","DetailPresenter","isLoading","error","isMovie","Helmet","original_title","name","backdrop_path","poster_path","status","release_date","substring","first_air_date","genres","map","genre","index","runtime","episode_run_time","vote_average","imdb_id","href","target","rel","tagline","belongs_to_collection","overview","videos","results","slice","video","src","key","allow","length","DetailContainer","state","match","path","includes","a","this","isNaN","parseInt","history","push","data","setState","console","log","PureComponent"],"mappings":"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","file":"static/js/4.f382748e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/no_poster.56e1ce3e.png\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  font-size: 3rem;\n  justify-content: center;\n  align-items: center;\n  height: 60vh;\n`;\n\nconst Loader = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ‚è∞\n    </span>\n  </Container>\n);\n\nexport default Loader;\n","import axios from \"axios\";\n\nconst base = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"b628b0f65cc8570a11e0e393168cfb49\",\n    language: \"en-US\"\n  }\n});\n\nexport const movieAPI = {\n  nowPlaying: () => base.get(\"movie/now_playing\"),\n  popular: () => base.get(\"movie/popular\"),\n  topRated: () => base.get(\"movie/top_rated\"),\n  upcoming: () => base.get(\"movie/upcoming\"),\n  detail: id =>\n    base.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: keyword =>\n    base.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(keyword)\n      }\n    })\n};\n\nexport const tvAPI = {\n  airingToday: () => base.get(\"tv/airing_today\"),\n  popular: () => base.get(\"tv/popular\"),\n  topRated: () => base.get(\"tv/top_rated\"),\n  detail: id =>\n    base.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: keyword =>\n    base.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(keyword)\n      }\n    })\n};\n\nexport const collectionAPI = {\n  detail: id => base.get(`collection/${id}`)\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst Text = styled.span`\n  width: 100vw;\n  color: ${props => props.color};\n  text-align: center;\n  font-size: 1rem;\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","export default __webpack_public_path__ + \"static/media/no_background.2e124746.jpeg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport noPoster from \"../Assets/no_poster.png\";\n\nconst Card = styled.div`\n  height: 5rem;\n  width: 5rem;\n  background-image: url(${props => (props.poster ? props.poster : noPoster)});\n  background-position: center center;\n  background-size: contain;\n  background-repeat: no-repeat;\n  border-radius: 2rem;\n`;\n\nconst Collection = ({ id, poster }) => (\n  <Link to={`/collection/${id}`}>\n    <Card poster={poster} />\n  </Link>\n);\n\nCollection.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster: PropTypes.string\n};\n\nexport default Collection;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport noBack from \"../Assets/no_background.jpeg\";\n\nconst Back = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => (props.back ? props.back : noBack)});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.4;\n  z-index: -1;\n`;\n\nconst BackPoster = ({ back }) => <Back back={back} />;\n\nexport default BackPoster;\n","export default __webpack_public_path__ + \"static/media/IMDB.1fd6c3b4.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport noPoster from \"../../Assets/no_poster.png\";\nimport noBack from \"../../Assets/no_background.jpeg\";\nimport Helmet from \"react-helmet\";\nimport IMDBIMG from \"../../Assets/IMDB.png\";\nimport CollectionCard from \"../../Components/CollectionCard\";\nimport BackPoster from \"../../Components/BackPoster\";\n\nconst BASE_URL = \"https://image.tmdb.org/t/p/original/\";\nconst Container = styled.div`\n  position: relative;\n  width: 100vw;\n  height: 90vh;\n  padding: 3rem;\n`;\nconst Background = styled(BackPoster)``;\n\nconst Content = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  box-sizing: border-box;\n`;\nconst Poster = styled.div`\n  width: 30%;\n  min-width: 20rem;\n  height: 100%;\n  background-image: url(${props => props.poster});\n  background-position: center center;\n  background-size: contain;\n  background-repeat: no-repeat;\n  z-index: 1;\n  border-radius: 0.4rem;\n  flex-wrap: wrap;\n`;\nconst Description = styled.div`\n  width: 60%;\n  height: 95%;\n  display: flex;\n  flex-direction: column;\n\n  padding-left: 4rem;\n  font-size: 1.5rem;\n  z-index: 1;\n  justify-content: space-between;\n`;\nconst TextContainer = styled.div`\n  height: 40%;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1rem;\n  > span {\n    margin-bottom: 1.5rem;\n  }\n`;\nconst Title = styled.h3`\n  font-size: 3rem;\n`;\nconst ItemContainer = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 1rem;\n  margin: 1rem 0;\n  flex-wrap: wrap;\n`;\nconst Item = styled.span``;\nconst Divider = styled.span`\n  margin: 0 0.4rem;\n  &:before {\n    content: \"‚àô\";\n  }\n`;\n\nconst Genre = styled.span`\n  font-size: 1rem;\n`;\nconst Runtime = styled.span``;\nconst Vote = styled.span``;\nconst IMDB = styled.div`\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n  width: 2rem;\n  height: 1rem;\n  background-image: url(${IMDBIMG});\n  background-position: center center;\n  background-size: contain;\n  background-repeat: no-repeat;\n  &:hover {\n    cursor: pointer;\n  }\n`;\nconst Tagline = styled.span`\n  font-style: italic;\n  font-size: 1.2rem;\n  margin: 1rem 0;\n  /* color: grey; */\n`;\nconst Overview = styled.p`\n  width: 70%;\n  font-size: 1rem;\n  line-height: 1.2;\n`;\nconst VideoContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n`;\nconst Video = styled.iframe`\n  margin-right: 1rem;\n  height: 100%;\n  width: 100%;\n`;\nconst Card = styled(CollectionCard)`\n  height: 100rem;\n  width: 30rem;\n`;\n\nconst DetailPresenter = ({ detail, isLoading, error, isMovie }) =>\n  isLoading ? (\n    <Loader />\n  ) : (\n    <>\n      <Helmet>\n        <title>\n          {detail.original_title ? detail.original_title : detail.name} |\n          WOWFLIX\n        </title>\n      </Helmet>\n      <Container>\n        <Background\n          back={\n            detail.backdrop_path ? `${BASE_URL}${detail.backdrop_path}` : noBack\n          }\n        />\n        <Content>\n          <Poster\n            poster={\n              detail.poster_path ? `${BASE_URL}${detail.poster_path}` : noPoster\n            }\n          />\n          <Description>\n            <TextContainer>\n              <Title>{isMovie ? detail.original_title : detail.name}</Title>\n              {detail.status === \"Planned\" || detail.status === \"Rumored\" ? (\n                \"\"\n              ) : (\n                <ItemContainer>\n                  <Item>\n                    {\" \"}\n                    {isMovie\n                      ? detail.release_date.substring(0, 4)\n                      : detail.first_air_date.substring(0, 4)}\n                  </Item>\n                  <Divider />\n                  <Item>\n                    <Genre>\n                      {detail.genres.map((genre, index) =>\n                        index > 0 ? ` ‚àô ` + genre.name : genre.name\n                      )}\n                      &nbsp;\n                    </Genre>\n                  </Item>\n\n                  <Item>\n                    <Runtime>\n                      {detail.runtime ? (\n                        <>\n                          <Divider /> {detail.runtime}m\n                        </>\n                      ) : (\n                        <>\n                          <Divider />\n                          {detail.episode_run_time[0]}m\n                        </>\n                      )}\n                    </Runtime>\n                  </Item>\n\n                  <Item>\n                    <Vote>\n                      {detail.vote_average ? (\n                        <>\n                          <Divider />\n                          <span aria-label=\"star\">‚≠êÔ∏è </span>\n                          <span>{detail.vote_average} / 10</span>\n                        </>\n                      ) : (\n                        \"\"\n                      )}\n                    </Vote>\n                  </Item>\n\n                  {detail.imdb_id ? (\n                    <>\n                      <Divider />\n                      <a\n                        href={`https://www.imdb.com/title/${detail.imdb_id}`}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        <IMDB />\n                      </a>\n                    </>\n                  ) : (\n                    \"\"\n                  )}\n                </ItemContainer>\n              )}\n\n              <ItemContainer>\n                <Tagline>{detail.tagline} </Tagline>{\" \"}\n                {detail.belongs_to_collection ? (\n                  <Card\n                    id={detail.belongs_to_collection.id}\n                    poster={`${BASE_URL}${detail.belongs_to_collection.poster_path}`}\n                  />\n                ) : (\n                  \"\"\n                )}\n              </ItemContainer>\n              <Overview>{detail.overview}</Overview>\n            </TextContainer>\n\n            {detail.videos ? (\n              <VideoContainer>\n                {detail.videos.results.slice(0, 1).map(video => (\n                  <Video\n                    key={video.id}\n                    src={`https://www.youtube.com/embed/${video.key}`}\n                    allow={\"fullscreen\"}\n                  />\n                ))}\n              </VideoContainer>\n            ) : (\n              \"\"\n            )}\n          </Description>\n        </Content>\n\n        {error && error.length > 0 && <Message text={error} color=\"#bbbbbb\" />}\n      </Container>\n    </>\n  );\n\nDetailPresenter.propTypes = {\n  detail: PropTypes.object,\n  isLoading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  isMovie: PropTypes.bool.isRequired\n};\n\nexport default DetailPresenter;\n","import React, { PureComponent } from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { movieAPI, tvAPI } from \"../../Components/API\";\n\nclass DetailContainer extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      detail: null,\n      isLoading: true,\n      error: \"\",\n      isMovie: props.match.path.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    let {\n      match: {\n        params: { id }\n      }\n    } = this.props;\n\n    if (isNaN(parseInt(id))) {\n      this.props.history.push(\"/\");\n    } else {\n      const { isMovie } = this.state;\n      id = parseInt(id);\n      let detail = null;\n      try {\n        if (isMovie) {\n          ({ data: detail } = await movieAPI.detail(id));\n        } else {\n          ({ data: detail } = await tvAPI.detail(id));\n        }\n        this.setState({ detail });\n      } catch {\n        this.setState({ error: \"Could not find the Detail\" });\n      } finally {\n        this.setState({ isLoading: false });\n      }\n    }\n  }\n\n  render() {\n    const { detail, isLoading, error, isMovie } = this.state;\n    console.log(detail);\n    return (\n      <DetailPresenter\n        detail={detail}\n        isLoading={isLoading}\n        error={error}\n        isMovie={isMovie}\n      />\n    );\n  }\n}\n\nexport default DetailContainer;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n"],"sourceRoot":""}